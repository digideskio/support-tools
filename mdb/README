NAME
    mdb - simple tool to dump parts of mongo databases to debug corruption issues

SYNOPSIS
    python mdb.py -c[fx[r[npbBt]]] dbpath ns
    python mdb.py -x[r[npbBt]] filename [offset]
    python mdb.py -r[bBt] filename offset
    python mdb.py -bB filename offset length
    python mdb.py -g[bBt] filename [string|hex hex ...]

DESCRIPTION

    mdb understands a subset of MongoDB and BSON data formats and is
    able to parse, partially validate, and print such data from complete
    database directories or from specified locations within specified
    database files. In addition it provides detailed information about
    the location within each file where the parsed information is
    found, including the location where corruption is detected, aiding
    in identifying the cause of the corruption.
    
    Operation is controlled by a set of flags specified in the first
    argument, as follows:

    c Information from the .ns file for selected namespaces is
      printed.  You must specify a dbpath, and you may specify an
      ns. The ns may be either a database name, in which case all
      namespaces in that database are printed; or it may be a fully
      qualified ns name. If no ns is specified all namespaces in all
      databases are printed.  In addition the f, x, r, n, p, b, and/or
      B flags may be specified to control printing of additional
      information.

    f When used with the c flag, free-list information for selected
      namespaces is printed in two forms: the free list for each
      bucket is printed; and each printed record header that is on a
      free list is annotated with it's bucket and ordinal position
      within the free list for that bucket.

    i when used with the c flag, indexes for the collection are printed.

    x Extent headers are printed. When used with the c flag the extent
      headers for the selected namespaces are printed. When used
      without the c flag you must specify a database filename and you
      may specify an offset (in hex) within that file that corresponds
      to the beginning of an extent; if you don't specify an offset
      all extents within the file are printed. In addition the r, n,
      p, b and/or B flags may be specified to control printing of
      additional information.

    r When used with the x flag record headers for each displayed
      extent are printed. Record headers are traversed within an
      extent by following the "length" field in the record header.
      When used without the x flag a single record header is printed,
      and a file name and offset must be specified. In addition the b,
      B, or t flags may be specified to control the printing of
      additional information.

    n When used with the x flag each printed record header is
      annotated with information about the position of that record on
      the first/next list. The annotiation takes the form "first+n" to
      indicate that this record is the nth record on the first/next
      list.

    p When used with the x flag each printed record header is
      annotated with information about the position of that record on
      the last/prev list. The annotiation takes the form "last-n" to
      indicate that this record is the nth record on the last/prev
      list.

    b When used with the r flag the BSON content of each record
      displayed is printed. When used without the r flag a filename,
      offset, and length must be specified, and the BSON content at
      that location is printed. The printed information includes
      offset, field name, field type for all fields; and field values
      for some types, excluding strings and BinData.

    B Like the b flag, except that field values for all types is
      printed.

    t When used with the r flag, the index content of displayed index
      records is printed.

    g Search the records in a file for a particular string. All
      records in all extents in the file are searched. The pattern may
      be specified as a single string, or as a sequence of byte values
      specified as two-digit hex numbers. In addition the b, B, or t
      flags may be specified to control the printing of additional
      information.


OUTPUT
    See test.sh for examples of commands, and look in expected/
    for examples of output for each of the commands.

NOTE
    This is by no means production code, either in terms of code
    quality or testing. It started out as a quick hack to debug a
    particular corrupted database, and has been hammered on a bit to
    give it some generality in hopes that it my be useful for
    debugging other corrupted databases.
